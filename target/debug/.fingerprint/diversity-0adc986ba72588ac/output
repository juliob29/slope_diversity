{"message":"unused variable: `kClasses`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2660,"byte_end":2668,"line_start":65,"line_end":65,"column_start":64,"column_end":72,"is_primary":true,"text":[{"text":"fn student_thread_routine(identifier: String, mut points: f64, kClasses: Arc<Vec<&str>>, channel_tuple: (crossbeam::channel::Sender<(String, u32, f64)>, crossbeam::channel::Receiver<bool>)) {","highlight_start":64,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider prefixing with an underscore","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2660,"byte_end":2668,"line_start":65,"line_end":65,"column_start":64,"column_end":72,"is_primary":true,"text":[{"text":"fn student_thread_routine(identifier: String, mut points: f64, kClasses: Arc<Vec<&str>>, channel_tuple: (crossbeam::channel::Sender<(String, u32, f64)>, crossbeam::channel::Receiver<bool>)) {","highlight_start":64,"highlight_end":72}],"label":null,"suggested_replacement":"_kClasses","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `kClasses`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:65:64\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn student_thread_routine(identifier: String, mut points: f64, kClasses: Arc<Vec<&str>>, channel_tuple: (crossbeam::channel::Sender<(String, u32, f64)>, crossbeam::channel::Receiver<bool>)) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider prefixing with an underscore: `_kClasses`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"variable `kClasses` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":2660,"byte_end":2668,"line_start":65,"line_end":65,"column_start":64,"column_end":72,"is_primary":true,"text":[{"text":"fn student_thread_routine(identifier: String, mut points: f64, kClasses: Arc<Vec<&str>>, channel_tuple: (crossbeam::channel::Sender<(String, u32, f64)>, crossbeam::channel::Receiver<bool>)) {","highlight_start":64,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":2660,"byte_end":2668,"line_start":65,"line_end":65,"column_start":64,"column_end":72,"is_primary":true,"text":[{"text":"fn student_thread_routine(identifier: String, mut points: f64, kClasses: Arc<Vec<&str>>, channel_tuple: (crossbeam::channel::Sender<(String, u32, f64)>, crossbeam::channel::Receiver<bool>)) {","highlight_start":64,"highlight_end":72}],"label":null,"suggested_replacement":"k_classes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `kClasses` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:65:64\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn student_thread_routine(identifier: String, mut points: f64, kClasses: Arc<Vec<&str>>, channel_tuple: (crossbeam::channel::Sender<(String, u32, f64)>, crossbeam::channel::Receiver<bool>)) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `k_classes`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
